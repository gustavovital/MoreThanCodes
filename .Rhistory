N = 3;
for(m in 1:N){
for(n in 1:N)
print(m)
}
print(m)
for(m in 1:N){
for(n in 1:N)
print(m)
print(n)
}
for(m in 1:N){
for(n in 1:N){
print(m)
print(n)
}
}
data <- read.csv('E:/Pós Graduação/2019/mroz.csv')
# letra a)
plot(db$hours)
# letra a)
plot(data$hours)
# letra b)
model <- lm(hours ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6, data = data)
summary(model)
# letra c)
plot(model$fitted.values)
# letra e)
tobit <-tobit(db$hours~db$nwifeinc+db$educ+db$exper+db$expersq+db$age+db$kidslt6+db$kidsge6)
# Pacotes necessários ----
library(AER)
install.packages('AER')
# Pacotes necessários ----
library(AER)
# letra e)
model.tobit <-tobit(hours ~ nwifeinc + educ + exper + expersq + age + kidslt6 + kidsge6, data = data)
summary(model.tobit)
# letra g)
valores_medios<-c(mean(data$nwifeinc),
mean(data$educ),
mean(data$exper),
mean(data$expersq),
mean(data$age),
mean(data$kidslt6),
mean(data$kidsge6))
variaveis<-c('nwifeinc', 'educ', 'exper', 'exper2', 'age', 'kidslt6', 'kidsge6')
tabela<-matrix(cbind(variaveis, valores_medios), ncol=2)
colnames(tabela)<-c('Variáveis', 'Valores médios')
print(tabela)
# letra h)
medias<-c(1,
mean(data$nwifeinc),
mean(data$educ),
mean(data$exper),
mean(data$expersq),
mean(data$age),
mean(data$kidslt6),
mean(data$kidsge6))
medias*tobit$coefficients
medias*model.tobit$coefficients
XB<-sum(medias*tobit$coefficients)
XB<-sum(medias*model.tobit$coefficients)
# letra i)
print(XB/tobit$scale)
# letra i)
print(XB/model.tobit$scale)
# letra j)
model.tobit$scale*dnorm(XB/model.tobit$scale)
# letra j)
print(model.tobit$scale*dnorm(XB/model.tobit$scale))
# letra k)
print(pnorm(XB/model.tobit$scale))
# letra l)
print(pnorm(XB/model.tobit$scale)*XB + model.tobit$scale*dnorm(XB/model.tobit$scale))
# letra m)
model.tobit$coefficients[7]*(pnorm((model.tobit$coefficients[1] +
mean(data$nwifeinc)*model.tobit$coefficients[2] +
mean(data$educ)*model.tobit$coefficients[3] +
mean(data$exper)*model.tobit$coefficients[4] +
mean(data$expersq)*model.tobit$coefficients[5] +
mean(data$age)*model.tobit$coefficients[6] +
0*model.tobit$coefficients[7] +
0*model.tobit$coefficients[8])/model.tobit$scale))
getwd()
n <- 2000
setseed(666)
seed(666)
set.seed(666)
n <- 2000
x1 <- rnorm(n, 2, 1)
x2 <- runif(n, 5, 17)
set.seed(666)
n <- 2000
x1 <- rnorm(n, 2, 1)
x2 <- runif(n, 5, 17)
X <- cbind(1, x1, x2)
e <- rnorm(n)
beta <- c(2, 8, 7.5)
y <- X%*%beta + e
plot(y)
y <- beta%*%X + e
ols <- function(y, x){
beta <- solve((t(x)%*%x))%*%t(x)*y
return(beta)
}
ols(y, X)
ols <- function(y, x){
beta <- solve(t(X)%*%X)%*%(t(X)%*%y)
return(beta)
}
ols(y, X)
ols <- function(y, x){
beta <- solve(t(x)%*%x)%*%(t(x)%*%y)
return(beta)
}
ols(y, X)
beta <- c(2, 16, 7.5)
y <- X%*%beta + e
ols <- function(y, x){
beta <- solve(t(x)%*%x)%*%(t(x)%*%y)
return(beta)
}
ols(y, X)
modelo <- lm(y ~ x1 + x2)
summary(modelo)
library(lmtest)
library(lmtest)
bptest(modelo)
plot(resid(modelo))
whiteTest <- function(modelo, significancia = 0.05){
## defini dois argumentos, o modelo a ser testado, e
## o nível de signific^ancia do teste, que por defaut
## está 5%
## defino os resíduos^2 e a partir da classe lm eu
## construo um dataframe para as variáveis exógenas
## do da regressão a ser realizada
u_hat2 <- resid(modelo)^2
data.mod <- data.frame(modelo$model)
exog <- attr(modelo$terms, "term.labels")
data <- data.frame(u_hat2, data.mod[exog])
## defino por fim o 'n' do modelo, e a matriz de regressores
## sendo elas as variáveis explicativas, as variáveis explicativas
## ao quadrado, e as interações entre as variáveis explicativas
n <- nrow(data)
matrix.white <- as.matrix(data.frame(model.matrix(u_hat2 ~ . + .^2, data = data),
data.mod[exog]^2))[, -1]
reg.white <- lm(u_hat2 ~ matrix.white)
nr2 <- n*summary(reg.white)$r.squared
x2 <- qchisq(1 - significancia, reg.white[['rank']]-1)
significancia <- as.character(significancia*100)
pvalueWhite <- paste("P-Valor =", as.character(1-pchisq(nr2, reg.white[['rank']]-1)))
## organizo as saidas do teste
if(nr2 > x2){
strn <- paste("Rejeitamos H0 a", significancia, '%')
} else{
strn <- paste("Nao rejeitamos H0 a", significancia, '%')
}
nr2 <- as.character(nr2)
x2 <- as.character(x2)
hip1 <- 'H0 : HOMOCEDASTICIDADE'
hip2 <- 'H1 : AUSENCIA DE HOMOCEDASTICIDADE'
nr2 <- paste("Estatistica de Teste:", nr2)
x2 <- paste("Regiao Critica:", x2)
grade <- '========================================'
return(cat(c(grade, 'Teste de White Para Heterocedasticidade','',
hip1, hip2,'', strn, nr2, x2, pvalueWhite, grade), sep = "\n"))
}
df <- data.frame(y, x1, x2)
x1 <- rnorm(n, 20, 10)
x2 <- runif(n, 3, 22)
beta <- c(2, 8, 7.5)
X <- cbind(1, x1, x2)
e <- rnorm(n, 10, 1)
y <- X%*%beta + e
plot(y)
plot(y, type='l')
ols(y, X)
summary(lm(y ~ x1 + x2))
summary(lm(y ~ X))
summary(lm(y ~ x1 + x2))
e <- rnorm(n, 100, 1)
y <- X%*%beta + e
plot(y, type='l')
ols(y, X)
e <- rnorm(n, 10, 1)
y <- X%*%beta
plot(y, type='l')
ols(y, X)
summary(lm(y ~ x1 + x2))
e <- rnorm(n, 0, 1)
y <- X%*%beta + e
plot(y, type='l')
ols(y, X)
e <- rnorm(n, 10, 1)
e <- rnorm(n, 7, 1)
y <- X%*%beta + e
plot(y, type='l')
ols(y, X)
e2 <- rnorm(n, x2^2, 1)
y <- X%*%beta + e2
plot(y, type='l')
ols(y, X)
e2 <- rnorm(n, x2*x1, 1)
y <- X%*%beta + e2
plot(y, type='l')
ols(y, X)
e2 <- rnorm(n, 0, 1767657)
y <- X%*%beta + e2
plot(y, type='l')
ols(y, X)
summary(lm(y ~ x1 + x2))
ols(y, X)
e2 <- rnorm(n, 0, 1767657)
y <- X%*%beta + e2
ols(y, X)
e2 <- rnorm(n, 0, 1)
y <- X%*%beta + e2
plot(y, type='l')
ols(y, X)
n <- 500
x1 <- rnorm(n, 1, 1)
x1 <- seq(1:n)*rnorm(n, 1, 1)
plot(x1)
x1 <- rnorm(n, 1, 1)
plot(x1)
x2 <- rnorm(n, 74, 3)
e <- rnorm(n)
beta <- c(69, 420, 666)
X <- cbind(1, x1, x2)
y <- X %*% beta + e
plot(y)
modelo <- lm(y ~ x1 + x2)
summary(modelo)
var(resid(modelo))
?Startup
Sys.getenv("R_ENVIRON")
Sys.getenv("R_HOME")
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.getenv("PATH")
tinytex::install_tinytex()
install.packages(c("backports", "BH", "BiocManager", "boot", "brio", "broom", "callr", "class", "cli", "colorspace", "convey", "cpp11", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "deldir", "desc", "DescTools", "devtools", "downlit", "dplyr", "DT", "e1071", "expm", "fansi", "farver", "fastmap", "foghorn", "forcats", "forecast", "foreign", "gargle", "generics", "ggplot2", "ggthemes", "gh", "git2r", "gtrendsR", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "hunspell", "IRdisplay", "isoband", "ISOcodes", "jsonlite", "KernSmooth", "knitr", "later", "latex2exp", "lifecycle", "lme4", "lubridate", "magick", "maptools", "MASS", "MatrixModels", "matrixStats", "memoise", "mgcv", "mime", "nlme", "nnet", "openxlsx", "pbdZMQ", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "plotrix", "processx", "promises", "ps", "quantmod", "quantreg", "R6", "ragg", "rappdirs", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "repr", "reprex", "rio", "rlang", "rmarkdown", "RMySQL", "rprojroot", "RSQLite", "rstudioapi", "rvest", "seasonal", "servr", "shiny", "slam", "sp", "SparseM", "spatial", "spatstat", "spatstat.data", "spatstat.utils", "srvyr", "stopwords", "stringi", "survival", "systemfonts", "testthat", "textshaping", "tibble", "tidyr", "tidytext", "tinytex", "tm", "tseries", "tweenr", "usethis", "utf8", "vctrs", "withr", "x13binary", "xaringan", "xfun", "xlsx", "XML", "xmlparsedata", "zoo"))
pwd
getwd()
tinytex::install_tinytex()
Sys.getenv("R_ENVIRON")
Sys.getenv("R_HOME")
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.getenv("R_ENVIRON")
Sys.getenv("R_HOME")
C:/PROGRA~1/R/R-40~1.5
Sys.getenv("R_HOME")
Sys.getenv("R_HOME")
Sys.getenv("R_ENVIRON")
Sys.which("pdflatex")
Sys.getenv("PATH")
2 in c(1,2)
Sys.getenv("PATH")
?Startup
Sys.which("pdflatex")
Sys.getenv("HOME")
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.getenv("R_ENVIRON")
Sys.getenv("HOME")
Sys.getenv("HOME")
Sys.getenv("R_ENVIRON")
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.which("pdflatex")
\documentclass{article}
\usepackage[left=2cm]{geometry}
tlmgr_install('tikz')
tinytex::tlmgr_install('tikz')
tinytex::tlmgr_install('xcolor')
Sys.which("xelatex")
# Pacotes necessários ----
library(tidyverse)
install.packages("imager")
library(imager)
# Define wd ----
setwd("E:\More Than Codes")
# Define wd ----
setwd("E:\\More Than Codes")
getwd()
list.files()
getwd()
getwd()
list.files()
list.files("/Data")
list.files("/Figures")
list.files("/Data")
list.files("/Figures")
list.files("Figures")
# Define wd ----
setwd("E:\\More Than Codes")
list.files("/Data")
# Pacotes necessários ----
library(tidyverse)
library(imager)
# Data ----
load.image("\\frankstein")
# Data ----
load.image("Data/frankstein")
# Data ----
load.image("Data/frankstein.jpg")
# Data ----
load.image("Data/frankenstein.jpg")
